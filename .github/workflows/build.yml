name: Build

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

env:
  CARGO_TERM_COLOR: always

jobs:
  tag:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.tag.outputs.new_tag }}
    steps:
      - uses: actions/checkout@v4
      - uses: mathieudutour/github-tag-action@v6.2
        id: tag
        with:
          github_token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform:
          - name: amd64
            target: x86_64-unknown-linux-gnu
          - name: arm64
            target: aarch64-unknown-linux-gnu
    steps:
      - name: Prepare variables
        run: |
          echo "CRATE_NAME=${GITHUB_REPOSITORY/#${GITHUB_REPOSITORY_OWNER}\//}" >> "$GITHUB_ENV"
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.platform.name }}
      - run: cargo clippy --no-deps -- --deny "warnings"
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: both
          target: ${{ matrix.platform.target }}
          args: "--locked --release"
          strip: true
      - run: mv target/${{ matrix.platform.target }}/release/${CRATE_NAME} jarvis
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.name }}
          path: jarvis
          retention-days: 1

  docker:
    runs-on: ubuntu-latest
    needs:
      - tag
      - build
    steps:
      - name: Prepare variables
        id: variables
        run: |
          echo "IMAGE_NAME=${GITHUB_REPOSITORY/#${GITHUB_REPOSITORY_OWNER}/jsalverda}" >> "$GITHUB_ENV"
          echo "IMAGE_NAME=${GITHUB_REPOSITORY/#${GITHUB_REPOSITORY_OWNER}/jsalverda}" >> "$GITHUB_OUTPUT"
      - uses: actions/checkout@v4
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
        with:
          path: linux
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.variables.outputs.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ needs.tag.outputs.new_tag }}
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        id: build
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  helm:
    runs-on: ubuntu-latest
    needs:
      - tag
      - build
    steps:
      - name: Prepare variables
        run: |
          echo "HELM_NAME=${GITHUB_REPOSITORY/#${GITHUB_REPOSITORY_OWNER}\//}" >> "$GITHUB_ENV"
      - uses: actions/checkout@v4
      - uses: azure/setup-helm@v3
        with:
          version: v3.10.1
      - run: helm lint --with-subcharts helm/$HELM_NAME
      - run: helm package --app-version ${{ needs.tag.outputs.new_tag }} --version ${{ needs.tag.outputs.new_tag }} --dependency-update helm/${{ env.HELM_NAME }}
      - uses: actions/checkout@v2
        with:
          repository: JorritSalverda/helm-charts
          ref: master
          path: helm-charts
          token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
      - run: |
          mkdir -p helm-charts/charts
          cp $HELM_NAME-${{ needs.tag.outputs.new_tag }}.tgz helm-charts/charts
          cd helm-charts
          helm repo index --url https://helm.jorritsalverda.com/ .
          git config user.email 'bot@estafette.io'
          git config user.name 'estafette-bot'
          git add --all
          git commit --allow-empty -m "$HELM_NAME ${{ needs.tag.outputs.new_tag }}"
          git push origin master

